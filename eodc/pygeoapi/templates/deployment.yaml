apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pygeoapi.fullname" . }}
  labels:
    {{- include "pygeoapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.pygeoapi.autoscaling.enabled }}
  replicas: {{ .Values.pygeoapi.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pygeoapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.pygeoapi.server.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pygeoapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.pygeoapi.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pygeoapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pygeoapi.server.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-envsubst
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.pygeoapi.secret.name }}
                key: {{ .Values.pygeoapi.secret.key }}
          image: blockstack/envsubst:latest
          volumeMounts:
          - name: shared-volume
            mountPath: /shared/config
          - name: config-volume
            mountPath: /etc/config   # Mount path for the shared volume
          command: ["/bin/sh", "-c", "envsubst < /etc/config/local.config.yml > /shared/config/updated.config.yml"]
      containers:
        - name: {{ .Chart.Name }}-server
          env:
            {{- if .Values.pygeoapi.server.env.ARGO_WORKFLOWS_SERVER }}
            - name: ARGO_WORKFLOWS_SERVER
              value: "{{ .Values.pygeoapi.server.env.ARGO_WORKFLOWS_SERVER }}"
            {{- end }}
            {{- if .Values.pygeoapi.server.env.ARGO_WORKFLOWS_NAMESPACE }}
            - name: ARGO_WORKFLOWS_NAMESPACE
              value: "{{ .Values.pygeoapi.server.env.ARGO_WORKFLOWS_NAMESPACE }}"
            {{- end }}
            {{- if .Values.pygeoapi.server.env.ARGO_WORKFLOWS_TOKEN.secretName }}
            - name: ARGO_WORKFLOWS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.pygeoapi.server.env.ARGO_WORKFLOWS_TOKEN.secretName }}"
                  key: "{{ .Values.pygeoapi.server.env.ARGO_WORKFLOWS_TOKEN.secretKey }}"
            {{- end }}
          securityContext:
            {{- toYaml .Values.pygeoapi.server.securityContext | nindent 12 }}
          image: "{{ .Values.pygeoapi.server.image.repository }}:{{ .Values.pygeoapi.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pygeoapi.server.image.pullPolicy }}
          volumeMounts:
          - name: shared-volume
            mountPath: /etc/config
          command: ["/bin/sh", "-c", "cp /etc/config/updated.config.yml /pygeoapi/local.config.yml && cat  /pygeoapi/local.config.yml && /entrypoint.sh" ]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.pygeoapi.server.resources | nindent 12 }}
      {{- with .Values.pygeoapi.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pygeoapi.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pygeoapi.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: pygeoapi-configmap
      - name: shared-volume
        persistentVolumeClaim:
          claimName: shared-volume-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-volume-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Mi
